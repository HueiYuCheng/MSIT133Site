
@{
    ViewData["Title"] = "Address";
}

<h1>Address</h1>
<select id="select1">
    @*<option value="1">Item1</option>
        <option value="2">Item2</option>
        <option value="3">text</option>*@
</select>
<select id="select2"></select>
<select id="select3"></select>
@section Scripts{
    <script>
        const selCity = document.querySelector('#select1');
        const selDistrict = document.querySelector('#select2');
        const selRoad = document.querySelector('#select3');

        selCity.addEventListener('change', () => {
            const city = selCity.options[selCity.selectedIndex].value;
            fetch("@Url.Content("~/api/districts")?city=" + city)
                .then(response=>response.json())
                .then(datas => {
                     renderDistrict(datas);
                    const district = selDistrict.options[selDistrict.selectedIndex].value;
                    return fetch("@Url.Content("~/api/roads")?district=" + district )
                })
                .then(response=>response.json())
                .then(datas => {
                    renderRoad(datas);
                })
                .catch(error => {
                    console.log("有錯誤：" + error);
                })
          })

        selDistrict.addEventListener('change', () => {
               const district = selDistrict.options[selDistrict.selectedIndex].value;
            fetch("@Url.Content("~/api/roads")?district=" + district)
                     .then(response=>response.json())
                     .then(datas => {
                          renderRoad(datas);
                     })
                    .catch(error => {
                          console.log("有錯誤：" + error);
                    })
        })

        fetch("@Url.Content("~/api/city")")
            .then(response=>response.json())
            .then(datas => {
                renderCity(datas);
                const city = selCity.options[selCity.selectedIndex].value;
                return fetch("@Url.Content("~/api/districts")?city=" + city )
            })
           .then(response=>response.json())
            .then(datas => {
                renderDistrict(datas);
                const district = selDistrict.options[selDistrict.selectedIndex].value;
                return fetch("@Url.Content("~/api/roads")?district=" + district )
            })
           .then(response=>response.json())
         .then(datas => {
                renderRoad(datas);
            })
            .catch(error => {
                console.log("有錯誤：" + error);
            })


        function renderCity(datas) {
            datas.forEach(item => {
                const opt = new Option(item.city, item.city);
                selCity.options.add(opt);
            })
        }
        function renderDistrict(datas) {
            //清除原有的option標籤
            while (selDistrict.length > 0) {
                selDistrict.remove(selDistrict.length - 1)
            }
            datas.forEach(item => {
                const opt = new Option(item.siteId, item.siteId);
                selDistrict.options.add(opt);
            })
        }
        function renderRoad(datas) {
            //清除原有的option標籤
            while (selRoad.length > 0) {
                selRoad.remove(selRoad.length - 1)
            }
            datas.forEach(item => {
                const opt = new Option(item.road, item.road);
                selRoad.options.add(opt);
            })
        }
    </script>
}

