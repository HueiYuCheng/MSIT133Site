
@{
    ViewData["Title"] = "FirstAjax";
}

<h1>FirstAjax</h1>
<input type="text"  placeholder="user name" id="inputName" />
<input type="number"  placeholder="user age"id="inputAge" />
<input type="button" value="Load" id="button1" />
<input type="button" value="Stop" id="button2" />
<div id="div1"></div>

@section Scripts{ 
<script>

    const btn = document.querySelector('#button1');
    const btnStop = document.querySelector('#button2');
    const divMessage = document.querySelector('#div1');
    const txtName = document.querySelector('#inputName');
    const txtAge = document.querySelector('#inputAge');

    //Step1. 建立Ajax物件
    const xhr = new XMLHttpRequest();

    btn.addEventListener('click', () => {

        //Step3. 接收伺服器回傳的結果(Response)
        //load 事件表示伺服器已經回傳結果到Client端了
        xhr.addEventListener("load", () => {
            //接受結果
            const data = xhr.responseText;
            //顯示在div中
            divMessage.innerHTML = data;
            console.log("load");
        })
        //ajax start
        xhr.addEventListener('loadstart', () => {
            console.log("loadstart");
            btn.value = "loading...";
            btn.setAttribute('disabled', 'disabled');
        })
        //ajax end
        xhr.addEventListener('loadend', () => {
            console.log("loadend");
            btn.value = "Load";
            btn.removeAttribute('disabled');
        })

        //timeout設定的時間到了，伺服器還沒回傳結果
        xhr.addEventListener('timeout', () => {
            console.log("timeout");
            divMessage.innerHTML = "伺服器忙線中，請稍後再試";
        })

        xhr.addEventListener('abort', () => {
            console.log('abort');
            divMessage.innerHTML = "取消執行";
        })
        //Step2. 對伺服器發出要求(Request)
        xhr.open("GET", `/api/index?userName=${txtName.value}&age=${txtAge.value}`); //打開瀏覽器輸入網址
        xhr.timeout = 5000;
        xhr.send(); //按下Enter鍵
    })

    //使用者可以取消程式執行
    btnStop.addEventListener('click', () => {
        xhr.abort();
    })
</script>

}

